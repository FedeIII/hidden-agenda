$hex-margin: 4px;
$row-margin: 4.7%;
$hex-gradient-amplitude: 30%;
$hex-base-color: #a1abb7;
$piece-margin: 10%;

$darkenLevelByCell: (
        (0,  3,  3,  6),
      (3,  2,  4,  2,  3),
    (3,  4,  3,  0,  4,  3),
  (6,  2,  0,  0,  3,  2,  0),
    (3,  4,  3,  0,  4,  3),
      (3,  2,  4,  2,  3),
        (0,  3,  3,  6),
);

@function getDarkenLevel($row, $cell) {
    $darkenLevel: nth(nth($darkenLevelByCell, $row + 1), $cell + 1);

    @return $darkenLevel;
}

@function getHexagonDarken($row, $cell) {
    $level: getDarkenLevel($row, $cell);

    @return $level * 6;
}

@function getHexBaseColor($row, $cell) {
    $level: getLevel($row, $cell);

    $darken: getHexagonDarken($row, $cell);
    @return darken($hex-base-color, $darken);
}

@function getHexGradientAngle($row, $cell) {
    $angle: 0deg;

    @if ($row > 3) {
        $angle: 180deg;
    }

    @if ($row == 3 and $cell < 4) {
        $angle: 270deg;
    }

    @if ($row == 3 and $cell >= 4) {
        $angle: 90deg;
    }

    @return $angle;
}

@function getHexGradient($row, $cell) {
    $color: getHexBaseColor($row, $cell);
    $color-light: lighten($color, $hex-gradient-amplitude/2);
    $color-dark: darken($color, $hex-gradient-amplitude/2);
    $color-light-narrow: darken($color-light, $hex-gradient-amplitude/4);
    $color-dark-narrow: lighten($color-dark, $hex-gradient-amplitude/4);

    $angle: getHexGradientAngle($row, $cell);

    $gradient-main-colors: ($color-light-narrow, $color-dark-narrow);

    @if ($row == 3) {
        $gradient-main-colors: ($color-light, $color-dark);
    }

    $gradients: (
        linear-gradient($angle, nth($gradient-main-colors, 1) 0%, nth($gradient-main-colors, 2) 100%),
        linear-gradient($angle - 60, $color-light 0%, $color-dark 100%),
        linear-gradient($angle + 60, $color-light 0%, $color-dark 100%),
        linear-gradient($angle, lighten(nth($gradient-main-colors, 1), 5%) 0%, lighten(nth($gradient-main-colors, 2), 5%) 100%),
        linear-gradient($angle - 60, lighten($color-light, 5%) 0%, lighten($color-dark, 5%) 100%),
        linear-gradient($angle + 60, lighten($color-light, 5%) 0%, lighten($color-dark, 5%) 100%)
    );

    @if ($row == 3 and $cell == 3) {
        $gradients: (
            radial-gradient(circle, lighten($color-light-narrow, 10%) 0%, lighten($color-dark-narrow, 10%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 10%) 0%, lighten($color-dark-narrow, 10%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 10%) 0%, lighten($color-dark-narrow, 10%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 15%) 0%, lighten($color-dark-narrow, 15%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 15%) 0%, lighten($color-dark-narrow, 15%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 15%) 0%, lighten($color-dark-narrow, 15%) 100%)
        );
    }

    @return $gradients;
}

$maxNumberOfCells: 7;
$total-margin: $maxNumberOfCells * $hex-margin;
$hexagon-width: calc((100% - #{$total-margin}) / #{$maxNumberOfCells});

body {
    font-family: monospace;
    font-size: 14px;
    letter-spacing: 5px;
    margin: 0;
    width: 100%;
}

.game {
    display: flex;
    flex-direction: column;
    overflow: hidden;
    z-index: 1;
}

.start-phase {
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 40px;

    &__options {
        width: 100%;
        background-color: antiquewhite;
        margin-bottom: 25px;
    }

    &__main-title {
        color: antiquewhite;
        background-color: black;
        padding: 5px 10px;
    }

    &__title {
        font-size: 10px;
        padding: 5px 10px;
    }

    &__number-players {
        display: flex;
        flex-direction: column;
        border: 1px solid black;
    }

    &__number-players-options {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
        font-size: 20px;
        padding: 15px;
    }

    &__number-players-option {
        label {
            margin-left: 5px;
        }
    }

    &__players {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }

    &__player {
        border: 1px solid black;
        flex-basis: 33%;
        flex-grow: 1;
    }

    &__player-name {
        margin: 5px 5px 10px 10px;
        padding: 5px 5px 2px 5px;
        background: antiquewhite;
        font-size: 20px;
        position: relative;
        text-transform: uppercase;
        width: 75%;

        &, &:focus, &:active {
            border: none;
            border-bottom: 1px solid black;
            outline: none;
            font-family: monospace;
            letter-spacing: 5px;
        }
    }

    &__buttons {
        text-align: center;
    }
}

.play-phase {
    position: relative;
    display: flex;
    flex-direction: column;
    padding: 40px 40px 60px;

    &__turn {
        padding: 20px;
        text-align: center;
    }

    &__board {
        position: relative;
        display: flex;
        flex-direction: row;
        margin-bottom: 20px;
    }

    &__hqs {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        width: 28%;
    }

    &__hq {
        $hq-padding: 8px;
        $hq-border: 2px;
        position: relative;
        height: 33%;
        display: flex;
        flex-direction: column;
        border: $hq-border solid gray;
        padding: $hq-padding;

        &-0 {
            background-color: white;
        }

        &-1 {
            background-color: red;
        }

        &-2 {
            background-color: black;
            filter: brightness(3);
        }

        &-3 {
            background-color: yellow;
        }
    }

    &__hq-store {
        position: relative;
        width: 100%;
        height: 100%;
        background-image: url('img/hexgrid.png');
        background-size: 100% 100%;
        background-repeat: no-repeat;
    }

    &__buttons {
        text-align: center;
        padding: 20px;
    }
}

.board {
    position: relative;
    width: 50%;
    display: flex;
    flex-direction: column;
    padding: 0 20px;

    &__row {
        position: relative;
        display: flex;
        flex-direction: row;
        margin-top: $row-margin;
        justify-content: center;

        & .hexagon {
            width: $hexagon-width;
            height: 0;
            padding-bottom: 7.8%;
        }
    }
}

.hexagon {
    $hexagon: #{&};
    position: relative;
    margin-right: $hex-margin;

    &:before,
    &:after {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
    }

    &:before {
        transform: rotate(60deg);
    }

    &:after {
        transform: rotate(-60deg);
    }

    &--highlighted {
        box-sizing: border-box;
        border-left: 2px solid red;
        border-right: 2px solid red;

        &:before {
            box-sizing: border-box;
            border-left: 2px solid red;
            border-right: 2px solid red;
        }

        &:after {
            box-sizing: border-box;
            border-left: 2px solid red;
            border-right: 2px solid red;
        }
    }

    @for $row from 0 through 6 {
        $numberOfCells: 10 - $row;

        @if $row < 4 {
            $numberOfCells: $row + 4;
        }

        @for $cell from 0 through $numberOfCells - 1 {
            &--row-#{$row} {
                &-cell-#{$cell} {

                    $gradients: getHexGradient($row, $cell);

                    background: nth($gradients, 1);

                    &:before {
                        background: nth($gradients, 2);
                    }

                    &:after {
                        background: nth($gradients, 3);
                    }

                    &:hover {
                        background: nth($gradients, 4);

                        &:before {
                            background: nth($gradients, 5);
                        }

                        &:after {
                            background: nth($gradients, 6);
                        }
                    }

                }
            }
        }
    }
}

.piece {
    position: absolute;
    width: 80%;
    top: -50%;
    bottom: 0;
    left: 0;
    right: 0;
    margin-left: 10%;
    margin-top: 13%;
    z-index: 2;

    &--direction {
        &-up {
            &-right {
                transform: rotate(-60deg);
            }
            &-left {
                transform: rotate(-120deg);
            }
        }
        &-down {
            &-right {
                transform: rotate(60deg);
            }
            &-left {
                transform: rotate(120deg);
            }
        }
        &-right {
            transform: rotate(0deg);
        }
        &-left {
            transform: rotate(180deg);
        }
    }

    &--hq {
        width: 18%;
        margin: 0;

        &--A1 {
            transform: rotate(-90deg);
            top: 42%;
            left: 4%;
        }
        &--A2 {
            transform: rotate(-90deg);
            top: 23.5%;
            left: 22.5%;
        }
        &--A3 {
            transform: rotate(-90deg);
            top: 5%;
            left: 41%;
        }
        &--A4 {
            transform: rotate(-90deg);
            top: 23.5%;
            left: 59%;
        }
        &--A5 {
            transform: rotate(-90deg);
            top: 42%;
            left: 77.5%;
        }
        &--C {
            transform: rotate(-30deg);
            top: 43%;
            left: 41%;
        }
    }

    &--selected {
        filter: brightness(2);
    }
}

.btn {
    font-family: monospace;
    font-size: 15px;
    color: white;
    letter-spacing: 5px;
    background-color: lightgray;
    padding: 5px 10px;
    margin: -1px 0 0 -1px;

    &, &:focus, &:active {
        border: none;
        outline: none;
    }

    &--active {
        background-color: black;
        margin: 0;
        box-shadow: 0 4px 5px 0 rgba(0,0,0,0.14),
                    0 1px 10px 0 rgba(0,0,0,0.12),
                    0 2px 4px -1px rgba(0,0,0,0.3);
        transition: transform 0.1s ease-out,
                    box-shadow 0.1s ease-out;

        &:active {
            background-color: gray;
            margin: 1px 0 0 1px;
        }

        &:hover {
            margin: 1px 0 0 1px;
            transform: scale(1.03);
            box-shadow: 0 6px 10px 0 rgba(0,0,0,0.14),
                        0 1px 18px 0 rgba(0,0,0,0.12),
                        0 3px 5px -1px rgba(0,0,0,0.3);
        }
    }
}
