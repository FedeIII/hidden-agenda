@function getDarkenLevel($row, $cell) {
    $darkenLevel: nth(nth($darkenLevelByCell, $row + 1), $cell + 1);

    @return $darkenLevel;
}

@function getHexagonDarken($row, $cell) {
    $level: getDarkenLevel($row, $cell);

    @return $level * 6;
}

@function getHexBaseColor($row, $cell) {
    $level: getLevel($row, $cell);

    $darken: getHexagonDarken($row, $cell);
    @return darken($hex-base-color, $darken);
}

@function getHexGradientAngle($row, $cell) {
    $angle: 0deg;

    @if ($row > 3) {
        $angle: 180deg;
    }

    @if ($row == 3 and $cell < 4) {
        $angle: 270deg;
    }

    @if ($row == 3 and $cell >= 4) {
        $angle: 90deg;
    }

    @return $angle;
}

@function getHexGradient($row, $cell) {
    $color: getHexBaseColor($row, $cell);
    $color-light: lighten($color, $hex-gradient-amplitude/2);
    $color-dark: darken($color, $hex-gradient-amplitude/2);
    $color-light-narrow: darken($color-light, $hex-gradient-amplitude/4);
    $color-dark-narrow: lighten($color-dark, $hex-gradient-amplitude/4);

    $angle: getHexGradientAngle($row, $cell);

    $gradient-main-colors: ($color-light-narrow, $color-dark-narrow);

    @if ($row == 3) {
        $gradient-main-colors: ($color-light, $color-dark);
    }

    $gradients: (
        linear-gradient($angle, nth($gradient-main-colors, 1) 0%, nth($gradient-main-colors, 2) 100%),
        linear-gradient($angle - 60, $color-light 0%, $color-dark 100%),
        linear-gradient($angle + 60, $color-light 0%, $color-dark 100%),
        linear-gradient($angle, lighten(nth($gradient-main-colors, 1), 5%) 0%, lighten(nth($gradient-main-colors, 2), 5%) 100%),
        linear-gradient($angle - 60, lighten($color-light, 5%) 0%, lighten($color-dark, 5%) 100%),
        linear-gradient($angle + 60, lighten($color-light, 5%) 0%, lighten($color-dark, 5%) 100%)
    );

    @if ($row == 3 and $cell == 3) {
        $gradients: (
            radial-gradient(circle, lighten($color-light-narrow, 10%) 0%, lighten($color-dark-narrow, 10%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 10%) 0%, lighten($color-dark-narrow, 10%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 10%) 0%, lighten($color-dark-narrow, 10%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 15%) 0%, lighten($color-dark-narrow, 15%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 15%) 0%, lighten($color-dark-narrow, 15%) 100%),
            radial-gradient(circle, lighten($color-light-narrow, 15%) 0%, lighten($color-dark-narrow, 15%) 100%)
        );
    }

    @return $gradients;
}

.hexagon {
    $hexagon: #{&};
    position: relative;
    margin-right: $hex-margin;

    &:before,
    &:after {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
    }

    &:before {
        transform: rotate(60deg);
    }

    &:after {
        transform: rotate(-60deg);
    }

    &--highlighted {
        box-sizing: border-box;
        border-left: 2px solid red;
        border-right: 2px solid red;

        &:before {
            box-sizing: border-box;
            border-left: 2px solid red;
            border-right: 2px solid red;
        }

        &:after {
            box-sizing: border-box;
            border-left: 2px solid red;
            border-right: 2px solid red;
        }
    }

    @for $row from 0 through 6 {
        $numberOfCells: 10 - $row;

        @if $row < 4 {
            $numberOfCells: $row + 4;
        }

        @for $cell from 0 through $numberOfCells - 1 {
            &--row-#{$row} {
                &-cell-#{$cell} {

                    $gradients: getHexGradient($row, $cell);

                    background: nth($gradients, 1);

                    &:before {
                        background: nth($gradients, 2);
                    }

                    &:after {
                        background: nth($gradients, 3);
                    }

                    &:hover {
                        background: nth($gradients, 4);

                        &:before {
                            background: nth($gradients, 5);
                        }

                        &:after {
                            background: nth($gradients, 6);
                        }
                    }

                }
            }
        }
    }
}
